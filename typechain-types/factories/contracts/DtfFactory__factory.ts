/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DtfFactory,
  DtfFactoryInterface,
} from "../../contracts/DtfFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wethAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_uniswapRouterAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_defaultDeadlineOffset",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_bytecodeContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "fundAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "FundCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "bytecodeContract",
    outputs: [
      {
        internalType: "contract FundBytecode",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_shareName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_shareSymbol",
        type: "string",
      },
      {
        internalType: "bool",
        name: "_depositsEnabled",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_minimumDeposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_slippageTolerance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_depositFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_withdrawalFee",
        type: "uint256",
      },
    ],
    name: "createFund",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultDeadlineOffset",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "deployedFunds",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllFunds",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFundCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getFundsCreatedBy",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isFund",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_shareName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_shareSymbol",
        type: "string",
      },
    ],
    name: "predictFundAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapRouterAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userFunds",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wethAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61010060405234801561001157600080fd5b50604051610de2380380610de28339810160408190526100309161006c565b6001600160a01b0393841660805291831660a05260c0521660e0526100b9565b80516001600160a01b038116811461006757600080fd5b919050565b6000806000806080858703121561008257600080fd5b61008b85610050565b935061009960208601610050565b9250604085015191506100ae60608601610050565b905092959194509250565b60805160a05160c05160e051610cce61011460003960008181610163015281816102ca01526104b90152600081816101f6015261058701526000818160ea015261056601526000818161012901526105430152610cce6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80639a068bd6116100715780639a068bd614610185578063a9d31f8514610198578063c7153b89146101ab578063e0e6449f146101de578063e8feca30146101f1578063fd6fdc741461021857600080fd5b806311648a4d146100b95780631c69b464146100d057806320ca3c7f146100e55780634f0e0ef3146101245780635b11044f1461014b57806361b33e611461015e575b600080fd5b6000545b6040519081526020015b60405180910390f35b6100d861022b565b6040516100c791906107ef565b61010c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100c7565b61010c7f000000000000000000000000000000000000000000000000000000000000000081565b61010c610159366004610901565b61028d565b61010c7f000000000000000000000000000000000000000000000000000000000000000081565b61010c610193366004610965565b6103dc565b6100d86101a636600461099a565b610406565b6101ce6101b936600461099a565b60016020526000908152604090205460ff1681565b60405190151581526020016100c7565b61010c6101ec3660046109bc565b61047c565b6100bd7f000000000000000000000000000000000000000000000000000000000000000081565b61010c6102263660046109e6565b6104b4565b6060600080548060200260200160405190810160405280929190818152602001828054801561028357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610265575b5050505050905090565b600080338484426040516020016102a79493929190610aaa565b604051602081830303815290604052805190602001209050600060ff60f81b30837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638487d3206040518163ffffffff1660e01b8152600401600060405180830381865afa158015610326573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261034e9190810190610b00565b60405160200161035e9190610b77565b604051602081830303815290604052805190602001206040516020016103bb94939291906001600160f81b031994909416845260609290921b6bffffffffffffffffffffffff191660018401526015830152603582015260550190565b60408051808303601f19018152919052805160209091012095945050505050565b600081815481106103ec57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03811660009081526002602090815260409182902080548351818402810184019094528084526060939283018282801561047057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610452575b50505050509050919050565b6002602052816000526040600020818154811061049857600080fd5b6000918252602090912001546001600160a01b03169150829050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638487d3206040518163ffffffff1660e01b8152600401600060405180830381865afa158015610515573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261053d9190810190610b00565b905060007f00000000000000000000000000000000000000000000000000000000000000008a8a7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008c8c8c8c8c6040516020016105c49a99989796959493929190610bbf565b6040516020818303038152906040529050600082826040516020016105ea929190610c33565b60405160208183030381529060405290506000338c8c426040516020016106149493929190610aaa565b6040516020818303038152906040528051906020012090506000818351602085016000f59050803b61064557600080fd5b60405163f2fde38b60e01b81523360048201526001600160a01b0382169063f2fde38b90602401600060405180830381600087803b15801561068657600080fd5b505af115801561069a573d6000803e3d6000fd5b505050506000819080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055506001806000836001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff02191690831515021790555060026000336001600160a01b03166001600160a01b03168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b03160217905550336001600160a01b0316816001600160a01b03167fab6ddbb22bfb67279e9b459ed92bcb90a725d7f6afab7953f8b59e96303c0d478f8f426040516107d793929190610c62565b60405180910390a39c9b505050505050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156108305783516001600160a01b03168352928401929184019160010161080b565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561087b5761087b61083c565b604052919050565b600067ffffffffffffffff82111561089d5761089d61083c565b50601f01601f191660200190565b600082601f8301126108bc57600080fd5b81356108cf6108ca82610883565b610852565b8181528460208386010111156108e457600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561091457600080fd5b823567ffffffffffffffff8082111561092c57600080fd5b610938868387016108ab565b9350602085013591508082111561094e57600080fd5b5061095b858286016108ab565b9150509250929050565b60006020828403121561097757600080fd5b5035919050565b80356001600160a01b038116811461099557600080fd5b919050565b6000602082840312156109ac57600080fd5b6109b58261097e565b9392505050565b600080604083850312156109cf57600080fd5b6109d88361097e565b946020939093013593505050565b600080600080600080600060e0888a031215610a0157600080fd5b873567ffffffffffffffff80821115610a1957600080fd5b610a258b838c016108ab565b985060208a0135915080821115610a3b57600080fd5b50610a488a828b016108ab565b96505060408801358015158114610a5e57600080fd5b969995985095966060810135965060808101359560a0820135955060c0909101359350915050565b60005b83811015610aa1578181015183820152602001610a89565b50506000910152565b6bffffffffffffffffffffffff198560601b16815260008451610ad4816014850160208901610a86565b845190830190610aeb816014840160208901610a86565b01601481019390935250506034019392505050565b600060208284031215610b1257600080fd5b815167ffffffffffffffff811115610b2957600080fd5b8201601f81018413610b3a57600080fd5b8051610b486108ca82610883565b818152856020838501011115610b5d57600080fd5b610b6e826020830160208601610a86565b95945050505050565b60008251610b89818460208701610a86565b9190910192915050565b60008151808452610bab816020860160208601610a86565b601f01601f19169290920160200192915050565b6001600160a01b038b8116825261014060208301819052600091610be58483018e610b93565b91508382036040850152610bf9828d610b93565b9a1660608401525050608081019690965293151560a086015260c085019290925260e0840152610100830152610120909101529392505050565b60008351610c45818460208801610a86565b835190830190610c59818360208801610a86565b01949350505050565b606081526000610c756060830186610b93565b8281036020840152610c878186610b93565b91505082604083015294935050505056fea26469706673582212207c55836ecbf595dd0a5ffc0220cb3daa015b6541f69971161db22bb7c5149bbc64736f6c63430008190033";

type DtfFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DtfFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DtfFactory__factory extends ContractFactory {
  constructor(...args: DtfFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _wethAddress: AddressLike,
    _uniswapRouterAddress: AddressLike,
    _defaultDeadlineOffset: BigNumberish,
    _bytecodeContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _wethAddress,
      _uniswapRouterAddress,
      _defaultDeadlineOffset,
      _bytecodeContract,
      overrides || {}
    );
  }
  override deploy(
    _wethAddress: AddressLike,
    _uniswapRouterAddress: AddressLike,
    _defaultDeadlineOffset: BigNumberish,
    _bytecodeContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _wethAddress,
      _uniswapRouterAddress,
      _defaultDeadlineOffset,
      _bytecodeContract,
      overrides || {}
    ) as Promise<
      DtfFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DtfFactory__factory {
    return super.connect(runner) as DtfFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DtfFactoryInterface {
    return new Interface(_abi) as DtfFactoryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DtfFactory {
    return new Contract(address, _abi, runner) as unknown as DtfFactory;
  }
}
